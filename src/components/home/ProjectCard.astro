---
import type { ImageMetadata } from 'astro'
import { Image } from 'astro:assets'
import type { HTMLTag, Polymorphic } from 'astro/types'

import { cn } from 'astro-pure/utils'

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
  heading: string
  subheading: string
  /** 1) astro:content image()가 주는 ImageMetadata */
  image?: ImageMetadata
  /** 2) 로컬 정적 경로: '/src/assets/projects/xxx.jpg' */
  imagePath?: string
  /** 3) 원격 URL(Notion CDN 등) */
  imageUrl?: string
  altText?: string
  href?: string
  class?: string
}

const {
  as: Tag = 'a',
  class: className,
  href,
  heading,
  subheading,
  image,
  imagePath,
  imageUrl,
  altText
} = Astro.props

// ✅ 패턴 오타 수정: .{avif,webp}
const images = import.meta.glob<{ default: ImageMetadata }>(
  '/src/assets/projects/*.{jpeg,jpg,png,gif,avif,webp}',
  { eager: true }
)

// imagePath가 주어졌으면 글롭에서 찾아봄(없으면 undefined)
const resolvedFromPath = imagePath ? images[imagePath]?.default : undefined

// 우선순위: ImageMetadata > 로컬경로(glob) > 원격 URL
const coverMeta: ImageMetadata | undefined = image ?? resolvedFromPath
const coverUrl: string | undefined = coverMeta ? undefined : imageUrl
---

<Tag
  class={cn(
    className,
    'project-card group overflow-hidden relative flex flex-col gap-y-3 rounded-2xl border bg-muted ',
    href && 'transition-all hover:border-foreground/25 hover:shadow-sm'
  )}
  href={href}
  target={href ? '_blank' : undefined}
>
  {
    coverMeta ? (
      // 1) ImageMetadata → Astro <Image>
      <Image
        src={coverMeta}
        alt={altText ?? heading}
        class='absolute top-0 h-36 w-full object-cover opacity-60 transition-opacity group-hover:opacity-100 dark:opacity-35'
        loading='lazy'
      />
    ) : coverUrl ? (
      // 2) 원격 URL → <img> (astro 이미지 최적화 미적용)
      <img
        src={coverUrl}
        alt={altText ?? heading}
        class='absolute top-0 h-36 w-full object-cover opacity-60 transition-opacity group-hover:opacity-100 dark:opacity-35'
        loading='lazy'
      />
    ) : null
  }

  <div class='project-card-fg z-10 flex flex-col gap-y-0.5 px-5 pb-4 pt-24 transition-all'>
    <h2 class='text-lg font-medium'>{heading}</h2>
    <p class='text-muted-foreground'>{subheading}</p>
  </div>
  <slot />
</Tag>

<style>
  .project-card-fg {
    --un-gradient-shape: to bottom in oklch;
    --un-gradient: var(--un-gradient-shape), var(--un-gradient-stops);
    --un-gradient-from-position: 0%;
    --un-gradient-from: transparent var(--un-gradient-from-position);
    --un-gradient-to-position: 65%;
    --un-gradient-to: hsl(var(--primary-foreground) / var(--un-to-opacity, 1))
      var(--un-gradient-to-position);
    --un-gradient-stops: var(--un-gradient-from), var(--un-gradient-to);
    background-image: linear-gradient(var(--un-gradient));
  }

  .project-card:hover .project-card-fg {
    --un-gradient-to-position: 80%;
  }
</style>
